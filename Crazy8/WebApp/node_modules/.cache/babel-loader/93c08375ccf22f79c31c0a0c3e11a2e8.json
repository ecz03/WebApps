{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Crazy88/crazy88/src/components/Enter.js\";\nimport React, { Component } from 'react';\nimport Octicon, { getIconByName } from '@primer/octicons-react';\n\nconst axios = require('axios').default;\n\nconst url = \"http://18.232.155.53:8000/players\";\nconst urlUserCount = \"http://18.232.155.53:8000/playerCount\";\n\nclass Enter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameId: props.gameId,\n      playerId: 0,\n      name: \"\",\n      totalPlayers: \"-\",\n      connected: \"-\",\n      nameButton: false,\n      enterButton: true\n    };\n    this.updateName = this.updateName.bind(this);\n    this.sendName = this.sendName.bind(this);\n    this.fetchPlayers = this.fetchPlayers.bind(this);\n    this.toGame = this.toGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchPlayers();\n    this.timer = setInterval(() => this.fetchPlayers(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  toGame() {\n    this.props.navigateToGame();\n  }\n\n  async fetchPlayers() {\n    //console.log(\"Fetching players\")\n    const GETdata = {\n      \"idJuego\": this.state.gameId\n    };\n    console.log(GETdata);\n    const response = await axios.get(urlUserCount, {\n      headers: {\n        'Content-Type': 'application/json',\n        'id_juego': this.state.gameId\n      }\n    });\n\n    if (response.data !== \"JuegoInexistente\") {\n      var data = response.data; //console.log(\"Datos entrantes: \" + data); \n\n      this.setState({\n        totalPlayers: data.total_jugadores,\n        connected: data.conectados\n      }, () => {\n        console.log(this.state.totalPlayers);\n        console.log(this.state.connected);\n\n        if (this.state.totalPlayers == this.state.connected) {\n          console.log(\"Todos los jugadores conectados, iniciar juego\");\n          clearInterval(this.timer);\n          this.timer = null;\n          this.setState({\n            enterButton: false\n          });\n        }\n      });\n    } else {\n      console.log(response.data);\n      console.log(\"Juego inexistente, detendiendo fetch\"); //mostrar algo\n\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n\n  updateName(e) {\n    this.setState({\n      name: e.target.value\n    }); //console.log(\"Changed: \" + this.state.name);\n  }\n\n  async sendName() {\n    //console.log(\"Name to send: \" + this.state.name);\n    const POSTdata = {\n      'idJuego': this.state.gameId,\n      'nombre': this.state.name\n    };\n    console.log(POSTdata);\n    const response = await axios.post(url, POSTdata, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.data !== \"JuegoLleno\" && response.data !== \"JuegoInexistente\") {\n      var data = response.data; //console.log(\"Datos entrantes: \" + data); \n\n      this.setState({\n        totalPlayers: data.total_jugadores,\n        connected: data.conectados,\n        playerId: data.num_jugador,\n        nameButton: true\n      }, () => {\n        console.log(this.state.totalPlayers);\n        console.log(this.state.connected);\n        console.log(\"Player ID: \" + this.state.playerId);\n        this.props.updatePlayerID(this.state.playerId);\n      });\n    } //this.timer = setInterval(() => this.fetchPlayers(), 1000);\n\n  }\n\n  render() {\n    //console.log(\"This is the game id \"+this.props.gameId)\n    return React.createElement(\"div\", {\n      className: \"container text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex p-5 flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center display-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"C\\xF3digo de Juego:\"), React.createElement(\"div\", {\n      className: \"text-center display-2 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.gameId), React.createElement(\"div\", {\n      className: \"d-flex p-3 mt-5 mb-5 flex-row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"playerName\",\n      className: \"form-control\",\n      placeholder: \"Introduce tu nombre\",\n      value: this.state.value,\n      onChange: this.updateName,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3 ml-3 span2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.sendName,\n      className: \"btn btn-primary btn-block\",\n      disabled: this.state.nameButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Unirse al Juego\"))), React.createElement(\"div\", {\n      className: \"d-flex p-3 mt-2 flex-row justify-content-center \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-center col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display-3 font-weight-bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.connected, \" / \", this.state.totalPlayers)), React.createElement(\"div\", {\n      className: \"d-flex justify-content-center col-md-3 ml-3 span2 align-self-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toGame,\n      className: \"d-flex btn btn-primary btn-block\",\n      disabled: this.state.enterButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Octicon, {\n      icon: getIconByName('sign-in'),\n      size: \"large\",\n      className: \"align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Enter;","map":{"version":3,"sources":["/home/ec2-user/environment/Crazy88/crazy88/src/components/Enter.js"],"names":["React","Component","Octicon","getIconByName","axios","require","default","url","urlUserCount","Enter","constructor","props","state","gameId","playerId","name","totalPlayers","connected","nameButton","enterButton","updateName","bind","sendName","fetchPlayers","toGame","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","navigateToGame","GETdata","console","log","response","get","headers","data","setState","total_jugadores","conectados","e","target","value","POSTdata","post","num_jugador","updatePlayerID","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Octicon, {getIconByName} from '@primer/octicons-react';\nconst axios = require('axios').default;\n\nconst url = \"http://18.232.155.53:8000/players\";\nconst urlUserCount = \"http://18.232.155.53:8000/playerCount\";\nclass Enter extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            gameId: props.gameId,\n            playerId: 0,\n            name: \"\",\n            totalPlayers: \"-\",\n            connected: \"-\",\n            nameButton: false,\n            enterButton: true,\n        };\n        \n        \n        this.updateName=this.updateName.bind(this);\n        this.sendName=this.sendName.bind(this);\n        this.fetchPlayers=this.fetchPlayers.bind(this);\n        this.toGame=this.toGame.bind(this);\n        \n    }\n    \n    componentDidMount() {\n        this.fetchPlayers();\n        this.timer = setInterval(() => this.fetchPlayers(), 1000);\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n    \n    toGame(){\n        this.props.navigateToGame();\n    }\n    \n    async fetchPlayers(){\n        //console.log(\"Fetching players\")\n       const GETdata = {\"idJuego\": this.state.gameId};\n       console.log(GETdata);\n        const response = await axios.get(\n          urlUserCount,\n          { headers: { 'Content-Type': 'application/json', 'id_juego': this.state.gameId}});\n        if(response.data !== \"JuegoInexistente\"){\n            var data = response.data;\n            //console.log(\"Datos entrantes: \" + data); \n            this.setState({\n                totalPlayers: data.total_jugadores,\n                connected: data.conectados,\n            }, ()=>{\n                console.log(this.state.totalPlayers);\n                console.log(this.state.connected);\n                \n                if(this.state.totalPlayers == this.state.connected){\n                    console.log(\"Todos los jugadores conectados, iniciar juego\");\n                    clearInterval(this.timer);\n                    this.timer = null;\n                    this.setState({\n                       enterButton: false, \n                    });\n                }\n            });\n        } else {\n            console.log(response.data)\n            console.log(\"Juego inexistente, detendiendo fetch\");\n            //mostrar algo\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n        \n    updateName(e){\n        this.setState({\n           name: e.target.value \n        });\n        //console.log(\"Changed: \" + this.state.name);\n    }\n    \n    async sendName(){\n        \n       //console.log(\"Name to send: \" + this.state.name);\n       const POSTdata = { 'idJuego': this.state.gameId, 'nombre':  this.state.name};\n       console.log(POSTdata);\n        const response = await axios.post(\n          url,\n          POSTdata,\n          { headers: { 'Content-Type': 'application/json' } }\n        )\n        if(response.data !== \"JuegoLleno\" && response.data !== \"JuegoInexistente\"){\n            var data = response.data;\n            //console.log(\"Datos entrantes: \" + data); \n            this.setState({\n                totalPlayers: data.total_jugadores,\n                connected: data.conectados,\n                playerId: data.num_jugador,\n                nameButton: true,\n            }, ()=>{\n                console.log(this.state.totalPlayers);\n                console.log(this.state.connected);\n                console.log(\"Player ID: \" + this.state.playerId);\n                this.props.updatePlayerID(this.state.playerId);\n            });\n        }\n        \n        //this.timer = setInterval(() => this.fetchPlayers(), 1000);\n    }\n\n    render(){\n        //console.log(\"This is the game id \"+this.props.gameId)\n        \n        return( \n           <div className=\"container text-white\">\n           \n               <div className=\"d-flex p-5 flex-column\">\n               \n                   <div className=\"text-center display-1\">\n                        Código de Juego: \n                   </div>\n                   <div className=\"text-center display-2 font-weight-bold\">\n                   {this.props.gameId}\n                   </div>\n                   <div className=\"d-flex p-3 mt-5 mb-5 flex-row justify-content-center\">\n                   \n                       \n                           <div className=\"col-md-3\">\n                               <input\n                               type=\"text\"\n                               name=\"playerName\"\n                               className=\"form-control\"\n                               placeholder=\"Introduce tu nombre\"\n                               value={this.state.value}\n                               onChange={this.updateName}\n                               required\n                               />\n                           </div>\n                           \n                           <div className=\"col-md-3 ml-3 span2\" >\n                               <button onClick={this.sendName} className=\"btn btn-primary btn-block\" disabled={this.state.nameButton}>\n                                    Unirse al Juego\n                               </button>\n                           </div>\n                       \n                   </div>\n                   \n                   <div className=\"d-flex p-3 mt-2 flex-row justify-content-center \">\n                   \n                       \n                           <div className=\"d-flex justify-content-center col-md-3\">\n                               <div className=\"display-3 font-weight-bolder\">\n                               {this.state.connected} / {this.state.totalPlayers}\n                               </div>\n                           </div>\n                           \n                           <div className=\"d-flex justify-content-center col-md-3 ml-3 span2 align-self-end\" >\n                                <div className=\"d-flex\" >\n                                   <button onClick={this.toGame}className=\"d-flex btn btn-primary btn-block\" disabled={this.state.enterButton}>\n                                   <Octicon icon={getIconByName('sign-in')} size='large' className=\"align-self-center\"/>\n                                   </button>\n                                </div>\n                           </div>\n                       \n                   </div>\n               </div>\n           </div>\n           );\n    }\n}\n\nexport default Enter\n\n    "]},"metadata":{},"sourceType":"module"}